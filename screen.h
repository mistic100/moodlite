#pragma once

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32
#define CHAR_WIDTH 6
#define CHAR_HEIGHT 8

static const unsigned char PROGMEM logo_bmp[] = { 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x09, 0xf2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1d, 0xf5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1c, 0xe5, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0xf0, 0xc3, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x3e, 0xe8, 0x80, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0xf0, 0xc3, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x3e, 0x48, 0x80, 0xf3, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0x30, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0x1f, 0xc0, 0xf3, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0x30, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xc3, 0xf0, 0x3f, 0x03, 0xcc, 0x30, 0xcf, 0xc3, 0xf0, 0x00, 
  0x01, 0xfc, 0x7f, 0x1f, 0xc0, 0xcc, 0xc3, 0xf0, 0x3f, 0x03, 0xcc, 0x30, 0xcf, 0xc3, 0xf0, 0x00, 
  0x00, 0xf9, 0x22, 0x0f, 0x80, 0xc0, 0xcc, 0x0c, 0xc0, 0xcc, 0x3c, 0x30, 0xc3, 0x0c, 0x0c, 0x00, 
  0x00, 0xfb, 0xa2, 0x0f, 0x80, 0xc0, 0xcc, 0x0c, 0xc0, 0xcc, 0x3c, 0x30, 0xc3, 0x0c, 0x0c, 0x00, 
  0x00, 0x73, 0x94, 0x07, 0x00, 0xc0, 0xcc, 0x0c, 0xc0, 0xcc, 0x0c, 0x30, 0xc3, 0x0f, 0xfc, 0x00, 
  0x00, 0x77, 0xd4, 0x07, 0x00, 0xc0, 0xcc, 0x0c, 0xc0, 0xcc, 0x0c, 0x30, 0xc3, 0x0f, 0xfc, 0x00, 
  0x00, 0x27, 0xc8, 0x02, 0x00, 0xc0, 0xcc, 0x0c, 0xc0, 0xcc, 0x0c, 0x30, 0xc3, 0x0c, 0x00, 0x00, 
  0x00, 0x0f, 0xe0, 0x00, 0x00, 0xc0, 0xcc, 0x0c, 0xc0, 0xcc, 0x0c, 0x30, 0xc3, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc3, 0xf0, 0x3f, 0x03, 0xf0, 0xfc, 0xc0, 0xc3, 0xf0, 0x00, 
  0x00, 0x0f, 0xe0, 0x00, 0x00, 0xc0, 0xc3, 0xf0, 0x3f, 0x03, 0xf0, 0xfc, 0xc0, 0xc3, 0xf0, 0x00, 
  0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

class Screen {

  public:
  Adafruit_SSD1306 *display;

  Screen() {
    display = new Adafruit_SSD1306(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire);

    display->begin(SSD1306_SWITCHCAPVCC, 0x3C);
  }

  /**
   * Display the logo
   */
  void showLogo() {
    display->clearDisplay();
    display->drawBitmap(0, 0, logo_bmp, SCREEN_WIDTH, SCREEN_HEIGHT, 1);
    display->display();
  }

  /**
   * Display the infos
   */
  void show(const String &currentMode, uint8_t brightness) {
    display->clearDisplay();

    display->fillTriangle(3, 0, 6, 5, 0, 5, WHITE);

    display->setTextColor(WHITE);

    display->setCursor(10, 0);
    display->setTextSize(1);
    display->print("Moodlite");

    display->setCursor(SCREEN_WIDTH - 4 * CHAR_WIDTH, 0);
    display->setTextSize(1);
    display->print(scale8(brightness, 100));
    display->print("%");

    display->setCursor(0, 2 * CHAR_HEIGHT);
    display->setTextSize(2);
    display->print(currentMode);

    display->display();
  }
  
};
